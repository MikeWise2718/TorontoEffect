#library(strucchange)
library(plyr)
library(dplyr)
library(doBy)
library(reshape2)
library(tidyr)
#library(glmnet)
#library(MSwM)
setwd("C:/Users/jlariv/Documents/OneDrive for Business/Toronto")
mydata <- read.csv("October1-5.Skylight-Lite.csv")
colnames(mydata)
play_size=10000
mydata <- mydata[1:play_size,]
mydata2<-mydata2[order(mydata2$HumanChatContent),]
mydata2<-mydata[order(mydata$HumanChatContent),]
View(mydata2)
NULL
Clear
mydata <- read.csv("VirtualAgent_v1_2016_11_01.ss_TOP_10000.csv")
colnames(mydata)
mydata <- mydata[,1:112]
colnames(mydata)
names(mydata$PartnerId)
unique(mydata$PartnerId)
set.seed(5)
dat = data.frame(x=sample(1:10,100, replace=TRUE))
View(dat)
dat <- mydata$PartnerId
dat %>%
group_by(PartnerId) %>%
summarise()
table(dat$PartnerId)
as.data.frame(table(dat$PartnerId))
as.data.frame(table(dat))
as.data.frame(table(mydata$PartnerId))
colnames(mydata)
aggregate(mydata[, 18], list(mydata$TotalLandingPageViews), mean)
table(mydata$TotalGetStartedClicks,mydata$ExperienceDuration)
ddply(mydata, c("TotalGetStartedClicks"), summarise,  mean = mean(ExperienceDuration), sd = sd(ExperienceDuration))
ddply(mydata, c("TotalGetStartedClicks"), summarise,  mean = mean(TotalUserResponsesSubmitted), sd = sd(TotalUserResponsesSubmitted))
as.data.frame(table(mydata$TotalGetStartedClicks,mydata&TotalUserResponsesSubmitted))
as.data.frame(table(mydata$TotalGetStartedClicks,mydata$TotalUserResponsesSubmitted))
colnames(mydata)
unique(mydata$TotalUserResponsesSubmitted)
unique(mydata$TotalAnswerResponsesReceived)
as.data.frame(table(mydata$TotalAnswerResponsesReceived,mydata$ExperienceDuration))
ddply(mydata, c("TotalAnswerResponsesReceived"), summarise,  mean = mean(ExperienceDuration), sd = sd(ExperienceDuration))
colnames(mydata)
order(mydata$ClickedInstantAnswerFeedbackSuccess)
colnames(mydata)
mydata<-mydata[order(mydata$ClickedInstantAnswerFeedbackSuccess),]
rep <- 1e6
n <- 4
data <- array(sample(c(0,1), rep*n, replace=TRUE), c(rep,n))
prob <- rep(NA, rep)
View(data)
for (i in 1:rep){
heads1 <- data[i,1:(n-1)]==1
heads2 <- data[i,2:n]==1
prob[i] <- sum(heads1 & heads2)/sum(heads1)
}
View(data)
setwd("C:/Users/jlariv/Documents/OneDrive for Business/Toronto")
mydata <- read.csv("Nov1_powershell.csv")
colnames(mydata)
unique(mydata$PartnerId)
as.data.frame(table(mydata$TotalLandingPageViews,mydata&ExperienceDuration))
as.data.frame(table(mydata$TotalLandingPageViews,mydata$ExperienceDuration))
aggregate(mydata[, 18], list(mydata$TotalLandingPageViews), mean)
View(mydata)
ddply(mydata, c("PartnerId"), summarise,  mean = mean(ExperienceDuration), sd = sd(ExperienceDuration))
unique(mydata$PartnerId)
as.data.frame(table(mydata$PartnerId))
ddply(mydata, c("TotalLandingPageViews"), summarise,  mean = mean(ExperienceDuration), sd = sd(ExperienceDuration))
ddply(mydata, c("TotalGetStartedClicks"), summarise,  mean = mean(ExperienceDuration), sd = sd(ExperienceDuration))
colnames(mydata)
ddply(mydata, c("TotalAnswerResponsesReceived"), summarise,  mean = mean(TotalUserResponsesSubmitted))
ddply(mydata, c("TotalAnswerResponsesReceived"), summarise,  mean = mean(ClickedInstantAnswerFeedbackSuccess))
as.data.frame(table(mydata$PartnerId,mydata$ClickedInstantAnswerFeedbackSuccess))
ddply(mydata, c("PartnerId"), summarise,  mean = mean(ClickedInstantAnswerFeedbackSuccess))
ddply(mydata, c("PartnerId"), summarise,  mean = mean(ClickedInstantAnswerFeedbackFailure))
as.data.frame(table(mydata$PartnerId,mydata$ClickedInstantAnswerFeedbackFailure))
ddply(mydata, c("TotalAnswerResponsesReceived"), summarise,  mean = mean(ExperienceDuration), sd = sd(ExperienceDuration))
mydata_chat <- read.csv("ChatSessionUnified_2016_11_20-Lmtd")
mydata_chat <- read.csv("ChatSessionUnified_2016_11_20-Lmtd.csv")
View(mydata_chat)
View(mydata_chat)
setwd("C:/Users/jlariv/OneDrive for Business/Toronto")
mydata <- read.csv("PhoneUnified_2016_11_20.csv")
colnames(mydata)
View(mydata)
mydata$dummy <- as.factor(mydata$SupportChannel)
mydata$dummy <- NULL
View(mydata)
unique(mydata$Lob)
unique(mydata$Product)
unique(mydata$ProductFamily)
unique(mydata$Hoss)
