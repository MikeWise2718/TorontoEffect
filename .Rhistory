}
regress2 <- function(df,vname,area,backg,dates,chgdate,mtit1,befdays=7,aftdays=7,model="model2"){
crk <- crackdate(chgdate)
idx <- length(results1)+1
htit <- sprintf("%d - Regression for %s %s on %s",idx,vname,model,chgdate)
cat(sprintf("htmlesc<<h2,%s>>\n",htit))
# step 1
rv1 <- doregression(df,vname,"formel2a",crk$date,befdays,aftdays)
if (verbose>0){
df1 <- rv1$df %>%  gather_("series",vname,c(vname,"predicted"))
mtit <- sprintf("%d - %s - %s",idx,mtit1,rv1$formstr)
plt <- dailyplot(df1,"dt",vname,series="series",mtit,ylab="Sum",
vlines=dates,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt))
print(plt)
mtit <- sprintf("%d - Step 1 Residuals - %s - %s",idx,mtit1,rv1$formstr)
plt <- residplot(df1,"dt","resid",mtit,ylab="Sum",
vlines=dates,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt))
}
newresults <- list(var=vname,
title=mtit1,
chgDate=crk$sdate,
chgVal=crk$sval,
model=model,
formula=rv1$formstr,
aic=rv1$fit$aic,
deviance=rv1$fit$dev
)
addToResults1(newresults)
# step 2
df2 <- rv1$df
df2$step1residuals <- rv1$fit$residuals
vname2 <- "step1residuals"
rv2 <- doregression(df2,vname2,"formel2b",crk$date,7,7)
if (verbose>0){
df1 <- rv2$df %>%  gather_("series",vname2,c(vname2,"predicted"))
mtit <- sprintf("%d - %s - %s",idx,mtit1,rv2$formstr)
plt <- dailyplot(df1,"dt",vname2,series="series",mtit,ylab="Sum",
vlines=dates,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt))
print(plt)
mtit <- sprintf("%d - Step 2 Residuals - %s - %s",idx,mtit1,rv2$formstr)
plt <- residplot(df1,"dt","resid",mtit,ylab="Sum",
vlines=dates,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt))
}
newresults <- list(var=vname,
title=mtit1,
chgDate=crk$sdate,
chgVal=crk$sval,
model=model,
formula=rv2$formstr,
chgCoef.fit=rv2$fit$coefficients["postchange"],
chgCoef.smry=rv2$sfit$coefficients["postchange",1],
chgStd.smry=rv2$sfit$coefficients["postchange",2],
chgTval.smry=rv2$sfit$coefficients["postchange",3],
chgPval.smry=rv2$sfit$coefficients["postchange",4],
chgZval.cfit=rv2$cfit["postchange","z value"],
chgPval.cfit=rv2$cfit["postchange","Pr(>|z|)"]
)
addToResults2(newresults)
}
doregressiondid <- function(df,vname,formel,verbosetxt=1){
formstr <- sprintf(formlist[[formel]],vname)
form <- as.formula(formstr)
fit <- glm(form,data=df)
summary_fit <- summary(fit)
coeftest_fit <- coeftest(fit, vcov = vcovHC(fit, "HC1"))
if (verbosetxt>1){
print(summary_fit)
}
if (verbosetxt>0){
print(coeftest_fit)
}
df$resid <- resid(fit)
#  df$predicted <-  df[[vname]]-df$resid
df$predicted <-  predict(fit,df)
# for debugging
ffit <<- fit
sfit <<- summary_fit
cfit <<- coeftest_fit
return(list(df=df,formstr=formstr,fit=fit,sfit=summary_fit,cfit=coeftest_fit))
}
#rdf2 <- getregdfdid(df2,vname,vname2,vname2,dates)
getregdfdid <- function(odf,vname,vname1,vname2,sdate,befdays=7,aftdays=7){
#print(head(odf))
print(vname1)
print(vname2)
odf$DOW <- wday(odf$dt)
odf$HOD <- hour(odf$dt)
df <- odf[c("dt","HOD","DOW",vname1,vname2)]
df <- df %>% gather(series,vname,c(-dt,-HOD,-DOW))
df[vname] <- df$vname
df$vname <- NULL
print(sdate)
crk <- crackdate(sdate)
sregdate <- crk$date - days(befdays)
eregdate <- crk$date + days(aftdays)
print(sprintf("getregdfdid - sdate:%s sregdate:%s eregdate:%s",
sdate,sregdate,eregdate))
df <- df %>% filter( sregdate<=dt & dt<= eregdate )
scutidx <- which(df$dt==crk$date)
print(crk$sdate)
print(scutidx)
print(sprintf("scutidx:%d",scutidx))
df <- df  %>% mutate( D1 = ifelse(series==vname2,1L,0L) ) %>%
mutate( idx = 1:nrow(df) ) %>%
mutate( D2 = ifelse(dt>crk$date,1L,0L) ) %>%
mutate( DD = D1*D2 )
# git rid of columns no longer needed
#df$series <- NULL
#df$idx <- NULL
print(summary(df))
return(df)
}
idx <- 0
regressdid <- function(df,vname,vname_ctr,vname_trt,dates,chgdate,
area,backg,mtit1,befdays=7,aftdays=7,model="model-did"){
idx <<- idx+1
rdf <- getregdfdid(df,vname,vname_ctr,vname_trt,chgdate,befdays,aftdays)
rv <- doregressiondid(rdf,vname,"formeldid")
rrv <<- rv
if (verbose>0){
df1 <- rv$df %>%  gather_("series",vname,c(vname,"predicted"))
# build plot dataframe
pdf <- rv$df[c("dt","series","chats","predicted")]
pdf <- gather(pdf,nseries,value,-dt,-series)
pdf$series <- paste(pdf$series,pdf$nseries,sep="-")
pdf[vname] <- pdf$value
mtit <- sprintf("%d - %s - %s",idx,mtit1,rv$formstr)
plt <- dailyplot(pdf,"dt",vname,series="series",mtit,ylab="Sum",
vlines=chgdate,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt),rotxaxtxt=-30)
suppressWarnings(print(plt))
mtit <- sprintf("%d - DID Residuals - %s - %s",idx,mtit1,rv$formstr)
plt <- residplot(rv$df,"dt","resid",mtit,ylab="Sum",
vlines=chgdate,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt))
}
crk <- crackdate(chgdate)
newresults <- list(var=vname,
title=mtit1,
chgDate=crk$sdate,
chgVal=crk$sval,
model=model,
formula=rv$formstr,
chgCoef.fit=rv$fit$coefficients["DD"],
chgCoef.smry=rv$sfit$coefficients["DD",1],
chgStd.smry=rv$sfit$coefficients["DD",2],
chgTval.smry=rv$sfit$coefficients["DD",3],
chgPval.smry=rv$sfit$coefficients["DD",4],
chgZval.cfit=rv$cfit["DD","z value"],
chgPval.cfit=rv$cfit["DD","Pr(>|z|)"]
)
addToResults1(newresults)
}
regressoverdatesdid <- function(model,df,vname,vname_ctr,vname_trt,area,title,befdays=7,aftdays=7){
dates <- xbxdates
backg <- xbxback
atit <- sprintf("%s - %s",area,title)
for (chgdate in dates){
switch(model,
"model-did"=regressdid(condf,vname,vname_ctr,vname_trt,dates,chgdate,
area,backg,atit,befdays=befdays,aftdays=aftdays)
)
}
initResults()
justdoone <- F # for testing
verbose <- 2
# we just want DID with Xbox
m <- "model-did"
if (justdoone){
regressoverdatesdid(m,condf,"chats","xtkchib","xabchib","Xbox","Hourly Chats")
} else {
regressoverdatesdid(m,condf,"chats","xtkchib","xabchib","Xbox","Hourly Chats")
regressoverdatesdid(m,condf,"log_chatss","xtkchib","xabchib","Xbox","log(Hourly Chats)")
regressoverdatesdid(m,condf,"rate_chats","xtkchib","xabchib","Xbox","Hourly Chat Rate per Session")
regressoverdatesdid(m,condf,"calls","xtkcall","xabcall","Xbox","Hourly Calls")
regressoverdatesdid(m,condf,"log_calls","xtkcall","xabcall","Xbox","log(Hourly Calls)")
regressoverdatesdid(m,condf,"rate_calls","xtkcall","xabcall","Xbox","Hourly Call Rate per Session")
}
doregressiondid <- function(df,vname,formel,verbosetxt=1){
formstr <- sprintf(formlist[[formel]],vname)
form <- as.formula(formstr)
fit <- glm(form,data=df)
summary_fit <- summary(fit)
coeftest_fit <- coeftest(fit, vcov = vcovHC(fit, "HC1"))
if (verbosetxt>1){
print(summary_fit)
}
if (verbosetxt>0){
print(coeftest_fit)
}
df$resid <- resid(fit)
#  df$predicted <-  df[[vname]]-df$resid
df$predicted <-  predict(fit,df)
# for debugging
ffit <<- fit
sfit <<- summary_fit
cfit <<- coeftest_fit
return(list(df=df,formstr=formstr,fit=fit,sfit=summary_fit,cfit=coeftest_fit))
}
#rdf2 <- getregdfdid(df2,vname,vname2,vname2,dates)
getregdfdid <- function(odf,vname,vname1,vname2,sdate,befdays=7,aftdays=7){
#print(head(odf))
print(vname1)
print(vname2)
odf$DOW <- wday(odf$dt)
odf$HOD <- hour(odf$dt)
df <- odf[c("dt","HOD","DOW",vname1,vname2)]
df <- df %>% gather(series,vname,c(-dt,-HOD,-DOW))
df[vname] <- df$vname
df$vname <- NULL
print(sdate)
crk <- crackdate(sdate)
sregdate <- crk$date - days(befdays)
eregdate <- crk$date + days(aftdays)
print(sprintf("getregdfdid - sdate:%s sregdate:%s eregdate:%s",
sdate,sregdate,eregdate))
df <- df %>% filter( sregdate<=dt & dt<= eregdate )
scutidx <- which(df$dt==crk$date)
print(crk$sdate)
print(scutidx)
print(sprintf("scutidx:%d",scutidx))
df <- df  %>% mutate( D1 = ifelse(series==vname2,1L,0L) ) %>%
mutate( idx = 1:nrow(df) ) %>%
mutate( D2 = ifelse(dt>crk$date,1L,0L) ) %>%
mutate( DD = D1*D2 )
# git rid of columns no longer needed
#df$series <- NULL
#df$idx <- NULL
print(summary(df))
return(df)
}
idx <- 0
regressdid <- function(df,vname,vname_ctr,vname_trt,dates,chgdate,
area,backg,mtit1,befdays=7,aftdays=7,model="model-did"){
idx <<- idx+1
rdf <- getregdfdid(df,vname,vname_ctr,vname_trt,chgdate,befdays,aftdays)
rv <- doregressiondid(rdf,vname,"formeldid")
rrv <<- rv
if (verbose>0){
df1 <- rv$df %>%  gather_("series",vname,c(vname,"predicted"))
# build plot dataframe
pdf <- rv$df[c("dt","series",vname,"predicted")]
pdf <- gather(pdf,nseries,value,-dt,-series)
pdf$series <- paste(pdf$series,pdf$nseries,sep="-")
pdf[vname] <- pdf$value
mtit <- sprintf("%d - %s - %s",idx,mtit1,rv$formstr)
plt <- dailyplot(pdf,"dt",vname,series="series",mtit,ylab="Sum",
vlines=chgdate,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt),rotxaxtxt=-30)
suppressWarnings(print(plt))
mtit <- sprintf("%d - DID Residuals - %s - %s",idx,mtit1,rv$formstr)
plt <- residplot(rv$df,"dt","resid",mtit,ylab="Sum",
vlines=chgdate,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt))
}
crk <- crackdate(chgdate)
newresults <- list(var=vname,
title=mtit1,
chgDate=crk$sdate,
chgVal=crk$sval,
model=model,
formula=rv$formstr,
chgCoef.fit=rv$fit$coefficients["DD"],
chgCoef.smry=rv$sfit$coefficients["DD",1],
chgStd.smry=rv$sfit$coefficients["DD",2],
chgTval.smry=rv$sfit$coefficients["DD",3],
chgPval.smry=rv$sfit$coefficients["DD",4],
chgZval.cfit=rv$cfit["DD","z value"],
chgPval.cfit=rv$cfit["DD","Pr(>|z|)"]
)
addToResults1(newresults)
}
regressoverdatesdid <- function(model,df,vname,vname_ctr,vname_trt,area,title,befdays=7,aftdays=7){
dates <- xbxdates
backg <- xbxback
atit <- sprintf("%s - %s",area,title)
for (chgdate in dates){
switch(model,
"model-did"=regressdid(condf,vname,vname_ctr,vname_trt,dates,chgdate,
area,backg,atit,befdays=befdays,aftdays=aftdays)
)
}
doregressiondid <- function(df,vname,formel,verbosetxt=1){
formstr <- sprintf(formlist[[formel]],vname)
form <- as.formula(formstr)
fit <- glm(form,data=df)
summary_fit <- summary(fit)
coeftest_fit <- coeftest(fit, vcov = vcovHC(fit, "HC1"))
if (verbosetxt>1){
print(summary_fit)
}
if (verbosetxt>0){
print(coeftest_fit)
}
df$resid <- resid(fit)
#  df$predicted <-  df[[vname]]-df$resid
df$predicted <-  predict(fit,df)
# for debugging
ffit <<- fit
sfit <<- summary_fit
cfit <<- coeftest_fit
return(list(df=df,formstr=formstr,fit=fit,sfit=summary_fit,cfit=coeftest_fit))
}
#rdf2 <- getregdfdid(df2,vname,vname2,vname2,dates)
getregdfdid <- function(odf,vname,vname1,vname2,sdate,befdays=7,aftdays=7){
#print(head(odf))
print(vname1)
print(vname2)
odf$DOW <- wday(odf$dt)
odf$HOD <- hour(odf$dt)
df <- odf[c("dt","HOD","DOW",vname1,vname2)]
df <- df %>% gather(series,vname,c(-dt,-HOD,-DOW))
df[vname] <- df$vname
df$vname <- NULL
print(sdate)
crk <- crackdate(sdate)
sregdate <- crk$date - days(befdays)
eregdate <- crk$date + days(aftdays)
print(sprintf("getregdfdid - sdate:%s sregdate:%s eregdate:%s",
sdate,sregdate,eregdate))
df <- df %>% filter( sregdate<=dt & dt<= eregdate )
scutidx <- which(df$dt==crk$date)
print(crk$sdate)
print(scutidx)
print(sprintf("scutidx:%d",scutidx))
df <- df  %>% mutate( D1 = ifelse(series==vname2,1L,0L) ) %>%
mutate( idx = 1:nrow(df) ) %>%
mutate( D2 = ifelse(dt>crk$date,1L,0L) ) %>%
mutate( DD = D1*D2 )
# git rid of columns no longer needed
#df$series <- NULL
#df$idx <- NULL
print(summary(df))
return(df)
}
idx <- 0
regressdid <- function(df,vname,vname_ctr,vname_trt,dates,chgdate,
area,backg,mtit1,befdays=7,aftdays=7,model="model-did"){
idx <<- idx+1
rdf <- getregdfdid(df,vname,vname_ctr,vname_trt,chgdate,befdays,aftdays)
rv <- doregressiondid(rdf,vname,"formeldid")
rrv <<- rv
if (verbose>0){
#  df1 <- rv$df %>%  gather_("series",vname,c(vname,"predicted"))
# build plot dataframe
pdf <- rv$df[c("dt","series",vname,"predicted")]
pdf <- gather(pdf,nseries,value,-dt,-series)
pdf$series <- paste(pdf$series,pdf$nseries,sep="-")
pdf[vname] <- pdf$value
mtit <- sprintf("%d - %s - %s",idx,mtit1,rv$formstr)
plt <- dailyplot(pdf,"dt",vname,series="series",mtit,ylab="Sum",
vlines=chgdate,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt),rotxaxtxt=-30)
suppressWarnings(print(plt))
mtit <- sprintf("%d - DID Residuals - %s - %s",idx,mtit1,rv$formstr)
plt <- residplot(rv$df,"dt","resid",mtit,ylab="Sum",
vlines=chgdate,backg=backg,ovsdate=min(df1$dt),ovedate=max(df1$dt))
}
crk <- crackdate(chgdate)
newresults <- list(var=vname,
title=mtit1,
chgDate=crk$sdate,
chgVal=crk$sval,
model=model,
formula=rv$formstr,
chgCoef.fit=rv$fit$coefficients["DD"],
chgCoef.smry=rv$sfit$coefficients["DD",1],
chgStd.smry=rv$sfit$coefficients["DD",2],
chgTval.smry=rv$sfit$coefficients["DD",3],
chgPval.smry=rv$sfit$coefficients["DD",4],
chgZval.cfit=rv$cfit["DD","z value"],
chgPval.cfit=rv$cfit["DD","Pr(>|z|)"]
)
addToResults1(newresults)
}
regressoverdatesdid <- function(model,df,vname,vname_ctr,vname_trt,area,title,befdays=7,aftdays=7){
dates <- xbxdates
backg <- xbxback
atit <- sprintf("%s - %s",area,title)
for (chgdate in dates){
switch(model,
"model-did"=regressdid(condf,vname,vname_ctr,vname_trt,dates,chgdate,
area,backg,atit,befdays=befdays,aftdays=aftdays)
)
}
initResults()
justdoone <- F # for testing
verbose <- 2
# we just want DID with Xbox
m <- "model-did"
if (justdoone){
regressoverdatesdid(m,condf,"chats","xtkchib","xabchib","Xbox","Hourly Chats")
} else {
regressoverdatesdid(m,condf,"chats","xtkchib","xabchib","Xbox","Hourly Chats")
regressoverdatesdid(m,condf,"log_chatss","xtkchib","xabchib","Xbox","log(Hourly Chats)")
regressoverdatesdid(m,condf,"rate_chats","xtkchib","xabchib","Xbox","Hourly Chat Rate per Session")
regressoverdatesdid(m,condf,"calls","xtkcall","xabcall","Xbox","Hourly Calls")
regressoverdatesdid(m,condf,"log_calls","xtkcall","xabcall","Xbox","log(Hourly Calls)")
regressoverdatesdid(m,condf,"rate_calls","xtkcall","xabcall","Xbox","Hourly Call Rate per Session")
}
doregressiondid <- function(df,vname,formel,verbosetxt=1){
formstr <- sprintf(formlist[[formel]],vname)
form <- as.formula(formstr)
fit <- glm(form,data=df)
summary_fit <- summary(fit)
coeftest_fit <- coeftest(fit, vcov = vcovHC(fit, "HC1"))
if (verbosetxt>1){
print(summary_fit)
}
if (verbosetxt>0){
print(coeftest_fit)
}
df$resid <- resid(fit)
#  df$predicted <-  df[[vname]]-df$resid
df$predicted <-  predict(fit,df)
# for debugging
ffit <<- fit
sfit <<- summary_fit
cfit <<- coeftest_fit
return(list(df=df,formstr=formstr,fit=fit,sfit=summary_fit,cfit=coeftest_fit))
}
#rdf2 <- getregdfdid(df2,vname,vname2,vname2,dates)
getregdfdid <- function(odf,vname,vname1,vname2,sdate,befdays=7,aftdays=7){
#print(head(odf))
print(vname1)
print(vname2)
odf$DOW <- wday(odf$dt)
odf$HOD <- hour(odf$dt)
df <- odf[c("dt","HOD","DOW",vname1,vname2)]
df <- df %>% gather(series,vname,c(-dt,-HOD,-DOW))
df[vname] <- df$vname
df$vname <- NULL
print(sdate)
crk <- crackdate(sdate)
sregdate <- crk$date - days(befdays)
eregdate <- crk$date + days(aftdays)
print(sprintf("getregdfdid - sdate:%s sregdate:%s eregdate:%s",
sdate,sregdate,eregdate))
df <- df %>% filter( sregdate<=dt & dt<= eregdate )
scutidx <- which(df$dt==crk$date)
print(crk$sdate)
print(scutidx)
print(sprintf("scutidx:%d",scutidx))
df <- df  %>% mutate( D1 = ifelse(series==vname2,1L,0L) ) %>%
mutate( idx = 1:nrow(df) ) %>%
mutate( D2 = ifelse(dt>crk$date,1L,0L) ) %>%
mutate( DD = D1*D2 )
# git rid of columns no longer needed
#df$series <- NULL
#df$idx <- NULL
print(summary(df))
return(df)
}
idx <- 0
regressdid <- function(df,vname,vname_ctr,vname_trt,dates,chgdate,
area,backg,mtit1,befdays=7,aftdays=7,model="model-did"){
idx <<- idx+1
rdf <- getregdfdid(df,vname,vname_ctr,vname_trt,chgdate,befdays,aftdays)
rv <- doregressiondid(rdf,vname,"formeldid")
rrv <<- rv
if (verbose>0){
#  df1 <- rv$df %>%  gather_("series",vname,c(vname,"predicted"))
# build plot dataframe
pdf <- rv$df[c("dt","series",vname,"predicted")]
pdf <- gather(pdf,nseries,value,-dt,-series)
pdf$series <- paste(pdf$series,pdf$nseries,sep="-")
pdf[vname] <- pdf$value
mtit <- sprintf("%d - %s - %s",idx,mtit1,rv$formstr)
plt <- dailyplot(pdf,"dt",vname,series="series",mtit,ylab="Sum",
vlines=chgdate,backg=backg,ovsdate=min(rv$df$dt),ovedate=max(rv$df$dt),rotxaxtxt=-30)
suppressWarnings(print(plt))
mtit <- sprintf("%d - DID Residuals - %s - %s",idx,mtit1,rv$formstr)
plt <- residplot(rv$df,"dt","resid",mtit,ylab="Sum",
vlines=chgdate,backg=backg,ovsdate=min(rv$df$dt),ovedate=max(rv$df$dt))
}
crk <- crackdate(chgdate)
newresults <- list(var=vname,
title=mtit1,
chgDate=crk$sdate,
chgVal=crk$sval,
model=model,
formula=rv$formstr,
chgCoef.fit=rv$fit$coefficients["DD"],
chgCoef.smry=rv$sfit$coefficients["DD",1],
chgStd.smry=rv$sfit$coefficients["DD",2],
chgTval.smry=rv$sfit$coefficients["DD",3],
chgPval.smry=rv$sfit$coefficients["DD",4],
chgZval.cfit=rv$cfit["DD","z value"],
chgPval.cfit=rv$cfit["DD","Pr(>|z|)"]
)
addToResults1(newresults)
}
regressoverdatesdid <- function(model,df,vname,vname_ctr,vname_trt,area,title,befdays=7,aftdays=7){
dates <- xbxdates
backg <- xbxback
atit <- sprintf("%s - %s",area,title)
for (chgdate in dates){
switch(model,
"model-did"=regressdid(condf,vname,vname_ctr,vname_trt,dates,chgdate,
area,backg,atit,befdays=befdays,aftdays=aftdays)
)
}
initResults()
justdoone <- F # for testing
verbose <- 2
# we just want DID with Xbox
m <- "model-did"
if (justdoone){
regressoverdatesdid(m,condf,"chats","xtkchib","xabchib","Xbox","Hourly Chats")
} else {
regressoverdatesdid(m,condf,"chats","xtkchib","xabchib","Xbox","Hourly Chats")
regressoverdatesdid(m,condf,"log_chatss","xtkchib","xabchib","Xbox","log(Hourly Chats)")
regressoverdatesdid(m,condf,"rate_chats","xtkchib","xabchib","Xbox","Hourly Chat Rate per Session")
regressoverdatesdid(m,condf,"calls","xtkcall","xabcall","Xbox","Hourly Calls")
regressoverdatesdid(m,condf,"log_calls","xtkcall","xabcall","Xbox","log(Hourly Calls)")
regressoverdatesdid(m,condf,"rate_calls","xtkcall","xabcall","Xbox","Hourly Call Rate per Session")
}
